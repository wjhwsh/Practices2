Grammar

    0 $accept: program $end

    1 program: if_condition condition

    2 condition: elseif_condition condition
    3          | else_condition
    4          | /* empty */

    5 elseif_condition: ELSE if_expression body

    6 else_condition: ELSE body

    7 if_condition: if_expression body

    8 if_expression: IF '(' primary_expr ')'

    9 primary_expr: or_expr AND_OP primary_expr
   10             | or_expr
   11             | '(' ID AND_BITOP bitor_expr ')' AND_OP primary_expr
   12             | '(' ID AND_BITOP bitor_expr ')'

   13 bitor_expr: /* empty */
   14           | '(' ID ')'
   15           | '(' ID OR_BITOP bitor_expr ')'
   16           | ID
   17           | ID OR_BITOP ID bitor_expr

   18 or_expr: /* empty */
   19        | '(' single_expr ')'
   20        | single_expr
   21        | '(' single_expr OR_OP or_expr ')'
   22        | single_expr OR_OP or_expr

   23 single_expr: ID EQ_OP ID
   24            | ID NE_OP ID

   25 body: HW_PARAM HW_PARAM
   26     | '{' hw_param_statement '}'

   27 hw_param_statement: HW_PARAM HW_PARAM hw_param_statement
   28                   | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 11 12 14 15 19 21
')' (41) 8 11 12 14 15 19 21
'{' (123) 26
'}' (125) 26
error (256)
ID (258) 11 12 14 15 16 17 23 24
HW_PARAM (259) 25 27
EQ_OP (260) 23
NE_OP (261) 24
AND_OP (262) 9 11
AND_BITOP (263) 11 12
OR_OP (264) 21 22
OR_BITOP (265) 15 17
IF (266) 8
ELSE (267) 5 6


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
program (18)
    on left: 1, on right: 0
condition (19)
    on left: 2 3 4, on right: 1 2
elseif_condition (20)
    on left: 5, on right: 2
else_condition (21)
    on left: 6, on right: 3
if_condition (22)
    on left: 7, on right: 1
if_expression (23)
    on left: 8, on right: 5 7
primary_expr (24)
    on left: 9 10 11 12, on right: 8 9 11
bitor_expr (25)
    on left: 13 14 15 16 17, on right: 11 12 15 17
or_expr (26)
    on left: 18 19 20 21 22, on right: 9 10 21 22
single_expr (27)
    on left: 23 24, on right: 19 20 21 22
body (28)
    on left: 25 26, on right: 5 6 7
hw_param_statement (29)
    on left: 27 28, on right: 26 27


state 0

    0 $accept: . program $end

    IF  shift, and go to state 1

    program        go to state 2
    if_condition   go to state 3
    if_expression  go to state 4


state 1

    8 if_expression: IF . '(' primary_expr ')'

    '('  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: if_condition . condition

    ELSE  shift, and go to state 7

    $default  reduce using rule 4 (condition)

    condition         go to state 8
    elseif_condition  go to state 9
    else_condition    go to state 10


state 4

    7 if_condition: if_expression . body

    HW_PARAM  shift, and go to state 11
    '{'       shift, and go to state 12

    body  go to state 13


state 5

    8 if_expression: IF '(' . primary_expr ')'

    ID   shift, and go to state 14
    '('  shift, and go to state 15

    $default  reduce using rule 18 (or_expr)

    primary_expr  go to state 16
    or_expr       go to state 17
    single_expr   go to state 18


state 6

    0 $accept: program $end .

    $default  accept


state 7

    5 elseif_condition: ELSE . if_expression body
    6 else_condition: ELSE . body

    HW_PARAM  shift, and go to state 11
    IF        shift, and go to state 1
    '{'       shift, and go to state 12

    if_expression  go to state 19
    body           go to state 20


state 8

    1 program: if_condition condition .

    $default  reduce using rule 1 (program)


state 9

    2 condition: elseif_condition . condition

    ELSE  shift, and go to state 7

    $default  reduce using rule 4 (condition)

    condition         go to state 21
    elseif_condition  go to state 9
    else_condition    go to state 10


state 10

    3 condition: else_condition .

    $default  reduce using rule 3 (condition)


state 11

   25 body: HW_PARAM . HW_PARAM

    HW_PARAM  shift, and go to state 22


state 12

   26 body: '{' . hw_param_statement '}'

    HW_PARAM  shift, and go to state 23

    $default  reduce using rule 28 (hw_param_statement)

    hw_param_statement  go to state 24


state 13

    7 if_condition: if_expression body .

    $default  reduce using rule 7 (if_condition)


state 14

   23 single_expr: ID . EQ_OP ID
   24            | ID . NE_OP ID

    EQ_OP  shift, and go to state 25
    NE_OP  shift, and go to state 26


state 15

   11 primary_expr: '(' . ID AND_BITOP bitor_expr ')' AND_OP primary_expr
   12             | '(' . ID AND_BITOP bitor_expr ')'
   19 or_expr: '(' . single_expr ')'
   21        | '(' . single_expr OR_OP or_expr ')'

    ID  shift, and go to state 27

    single_expr  go to state 28


state 16

    8 if_expression: IF '(' primary_expr . ')'

    ')'  shift, and go to state 29


state 17

    9 primary_expr: or_expr . AND_OP primary_expr
   10             | or_expr .

    AND_OP  shift, and go to state 30

    $default  reduce using rule 10 (primary_expr)


state 18

   20 or_expr: single_expr .
   22        | single_expr . OR_OP or_expr

    OR_OP  shift, and go to state 31

    $default  reduce using rule 20 (or_expr)


state 19

    5 elseif_condition: ELSE if_expression . body

    HW_PARAM  shift, and go to state 11
    '{'       shift, and go to state 12

    body  go to state 32


state 20

    6 else_condition: ELSE body .

    $default  reduce using rule 6 (else_condition)


state 21

    2 condition: elseif_condition condition .

    $default  reduce using rule 2 (condition)


state 22

   25 body: HW_PARAM HW_PARAM .

    $default  reduce using rule 25 (body)


state 23

   27 hw_param_statement: HW_PARAM . HW_PARAM hw_param_statement

    HW_PARAM  shift, and go to state 33


state 24

   26 body: '{' hw_param_statement . '}'

    '}'  shift, and go to state 34


state 25

   23 single_expr: ID EQ_OP . ID

    ID  shift, and go to state 35


state 26

   24 single_expr: ID NE_OP . ID

    ID  shift, and go to state 36


state 27

   11 primary_expr: '(' ID . AND_BITOP bitor_expr ')' AND_OP primary_expr
   12             | '(' ID . AND_BITOP bitor_expr ')'
   23 single_expr: ID . EQ_OP ID
   24            | ID . NE_OP ID

    EQ_OP      shift, and go to state 25
    NE_OP      shift, and go to state 26
    AND_BITOP  shift, and go to state 37


state 28

   19 or_expr: '(' single_expr . ')'
   21        | '(' single_expr . OR_OP or_expr ')'

    OR_OP  shift, and go to state 38
    ')'    shift, and go to state 39


state 29

    8 if_expression: IF '(' primary_expr ')' .

    $default  reduce using rule 8 (if_expression)


state 30

    9 primary_expr: or_expr AND_OP . primary_expr

    ID   shift, and go to state 14
    '('  shift, and go to state 15

    $default  reduce using rule 18 (or_expr)

    primary_expr  go to state 40
    or_expr       go to state 17
    single_expr   go to state 18


state 31

   22 or_expr: single_expr OR_OP . or_expr

    ID   shift, and go to state 14
    '('  shift, and go to state 41

    $default  reduce using rule 18 (or_expr)

    or_expr      go to state 42
    single_expr  go to state 18


state 32

    5 elseif_condition: ELSE if_expression body .

    $default  reduce using rule 5 (elseif_condition)


state 33

   27 hw_param_statement: HW_PARAM HW_PARAM . hw_param_statement

    HW_PARAM  shift, and go to state 23

    $default  reduce using rule 28 (hw_param_statement)

    hw_param_statement  go to state 43


state 34

   26 body: '{' hw_param_statement '}' .

    $default  reduce using rule 26 (body)


state 35

   23 single_expr: ID EQ_OP ID .

    $default  reduce using rule 23 (single_expr)


state 36

   24 single_expr: ID NE_OP ID .

    $default  reduce using rule 24 (single_expr)


state 37

   11 primary_expr: '(' ID AND_BITOP . bitor_expr ')' AND_OP primary_expr
   12             | '(' ID AND_BITOP . bitor_expr ')'

    ID   shift, and go to state 44
    '('  shift, and go to state 45

    $default  reduce using rule 13 (bitor_expr)

    bitor_expr  go to state 46


state 38

   21 or_expr: '(' single_expr OR_OP . or_expr ')'

    ID   shift, and go to state 14
    '('  shift, and go to state 41

    $default  reduce using rule 18 (or_expr)

    or_expr      go to state 47
    single_expr  go to state 18


state 39

   19 or_expr: '(' single_expr ')' .

    $default  reduce using rule 19 (or_expr)


state 40

    9 primary_expr: or_expr AND_OP primary_expr .

    $default  reduce using rule 9 (primary_expr)


state 41

   19 or_expr: '(' . single_expr ')'
   21        | '(' . single_expr OR_OP or_expr ')'

    ID  shift, and go to state 14

    single_expr  go to state 28


state 42

   22 or_expr: single_expr OR_OP or_expr .

    $default  reduce using rule 22 (or_expr)


state 43

   27 hw_param_statement: HW_PARAM HW_PARAM hw_param_statement .

    $default  reduce using rule 27 (hw_param_statement)


state 44

   16 bitor_expr: ID .
   17           | ID . OR_BITOP ID bitor_expr

    OR_BITOP  shift, and go to state 48

    $default  reduce using rule 16 (bitor_expr)


state 45

   14 bitor_expr: '(' . ID ')'
   15           | '(' . ID OR_BITOP bitor_expr ')'

    ID  shift, and go to state 49


state 46

   11 primary_expr: '(' ID AND_BITOP bitor_expr . ')' AND_OP primary_expr
   12             | '(' ID AND_BITOP bitor_expr . ')'

    ')'  shift, and go to state 50


state 47

   21 or_expr: '(' single_expr OR_OP or_expr . ')'

    ')'  shift, and go to state 51


state 48

   17 bitor_expr: ID OR_BITOP . ID bitor_expr

    ID  shift, and go to state 52


state 49

   14 bitor_expr: '(' ID . ')'
   15           | '(' ID . OR_BITOP bitor_expr ')'

    OR_BITOP  shift, and go to state 53
    ')'       shift, and go to state 54


state 50

   11 primary_expr: '(' ID AND_BITOP bitor_expr ')' . AND_OP primary_expr
   12             | '(' ID AND_BITOP bitor_expr ')' .

    AND_OP  shift, and go to state 55

    $default  reduce using rule 12 (primary_expr)


state 51

   21 or_expr: '(' single_expr OR_OP or_expr ')' .

    $default  reduce using rule 21 (or_expr)


state 52

   17 bitor_expr: ID OR_BITOP ID . bitor_expr

    ID   shift, and go to state 44
    '('  shift, and go to state 45

    $default  reduce using rule 13 (bitor_expr)

    bitor_expr  go to state 56


state 53

   15 bitor_expr: '(' ID OR_BITOP . bitor_expr ')'

    ID   shift, and go to state 44
    '('  shift, and go to state 45

    $default  reduce using rule 13 (bitor_expr)

    bitor_expr  go to state 57


state 54

   14 bitor_expr: '(' ID ')' .

    $default  reduce using rule 14 (bitor_expr)


state 55

   11 primary_expr: '(' ID AND_BITOP bitor_expr ')' AND_OP . primary_expr

    ID   shift, and go to state 14
    '('  shift, and go to state 15

    $default  reduce using rule 18 (or_expr)

    primary_expr  go to state 58
    or_expr       go to state 17
    single_expr   go to state 18


state 56

   17 bitor_expr: ID OR_BITOP ID bitor_expr .

    $default  reduce using rule 17 (bitor_expr)


state 57

   15 bitor_expr: '(' ID OR_BITOP bitor_expr . ')'

    ')'  shift, and go to state 59


state 58

   11 primary_expr: '(' ID AND_BITOP bitor_expr ')' AND_OP primary_expr .

    $default  reduce using rule 11 (primary_expr)


state 59

   15 bitor_expr: '(' ID OR_BITOP bitor_expr ')' .

    $default  reduce using rule 15 (bitor_expr)
