from interfaces.exploit import Exploit, ExploitError, RES_ERROR, RES_OK, RES_UNKNOWN, RES_FAIL
import managers.tcp as tcp

desc = '''
<br><hr><br>
<center><big><b>HTTP Test</b></big></center>
<hr><br><br>
<b>Vulnerability</b><hr>
 None. 
<br><br>
<b>Attack Details</b><hr>
This exploit is used to test the userland network stack.
It connects to the echo service on the target host and
it sends and receives a couple of strings
<br><br>
Parameters:<br>
 None
<br><br>
'''


class WebTestExploit(Exploit):
	
	def __init__(self):
		Exploit.__init__(self,'Echo Test Exploit', desc)
		
	def execute(self):
		self.res = False
		s = tcp.UserSpaceTCPSocket()
		#s = tcp.PythonTCPSocket()
	
		self.log.info("Connecting ....")
		if s.connect(7)==False:
			self.log.error("Echo service is not running on the target host")
			return
		
		self.log.info("First round (single small)")
		s.send("Hello World\n")
		rec = s.readline(blocking=True, timeout=60)
		if rec != "Hello World":
			self.log.error("Rnd I Failed: rcv = %s"%rec)
			return
		
		self.log.info("Second round (single big)")
		s.send("Hello World"*100+"\n")
		rec= s.readline(blocking=True, timeout=60)
		if rec != "Hello World"*100:
			self.log.error("Rnd II Failed:\n rcv = %s\n snt = %s"%(rec, "Hello World"*100))
			return
		
		self.log.info("Third round (multiple packets)")
		s.send("trythis"*600+"\n")
		rec = s.readline(blocking=True, timeout=60)
		if rec != "trythis"*600:
			self.log.error("Rnd III Failed: send %d bytes, received %d bytes"%(len("trythis"*600+"\n"),len(rec)))
			return
		
		s.half_close()
		self.res = True		
						
	def isSuccessful(self):
		if self.res:
			return RES_OK
		return RES_FAIL

